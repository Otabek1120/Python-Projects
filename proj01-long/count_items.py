def count(file_name):    """    This function reads in the file with the "file name"    and creates a dictionary of strings as keys and ints as values.    Then,it appends the vals and keys of the dictionary as tuples to a    list and returns the list    :param file_name: the name of the file to be read    :return: the list of tuples of one int and one str.    """    open_file = open(file_name, "r")    file_content = open_file.readlines()    count_items_dict = {}    for line in file_content:        if line != "\n":            if "#" not in line:                line = line.split()                key = line[0].strip(" ")                val = line[1].strip(" ")                if key not in count_items_dict:                    count_items_dict[key] = int(val)                else:                    count_items_dict[key] += int(val)    sorted_dict = {}    sorted_keys = sorted(count_items_dict.keys())    for key in sorted_keys:        sorted_dict[key] = count_items_dict[key]    val_key_list = []    for key, val in sorted_dict.items():        val_key_list.append((val, key))    return val_key_list, sorted(val_key_list)def main():    file_name = input("File to scan: ").strip(" ")    val_key_list, val_key_list_sorted = count(file_name)[0], count(file_name)[1]    print("STEP 1: THE ORIGINAL DICTIONARY")    for item in val_key_list:        print("Key:", item[1], "Value:", item[0])    print()    print("STEP 2: A LIST OF VALUE->KEY TUPLES")    print(val_key_list)    print()    print("STEP 3: AFTER SORTING")    print(val_key_list_sorted)    print()    print("STEP 4: THE ACTUAL OUTPUT")    for elem in val_key_list_sorted:        print(elem[1], elem[0])if __name__ == '__main__':    main()